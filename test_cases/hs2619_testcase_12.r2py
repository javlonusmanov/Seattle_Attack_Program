# Test Case 12: Threads 2

testid = 12
testfilename1 = "testfile_"+ str(testid) + "_1.txt"
testfilename2 = "testfile_"+ str(testid) + "_2.txt"
# #  log("\n=======>Test Case " + str(testid) + "<=======\n");

mycontext['threadOneIsDone'] = False
mycontext['threadTwoIsDone'] = False
mycontext['TestingIsDone'] = False

def threadOne():
  try:
    if testfilename1 in listfiles():
      removefile(testfilename1)
    myfile1=openfile(testfilename1,True)  #Open a file
    #write something
    myfile1.writeat("TestTest",0)
    myfile1.setmaxfilesize(6)
    
    data = myfile1.readat(None,0)
    if data == "TestTe":
      pass
    else:
      raise Exception
    
    mycontext['threadOneIsDone'] = True

    while mycontext['threadTwoIsDone'] == False:
      #  log("Thread 1 sleeping\n")
      sleep(1)

    #  log("Resuming Thread 1\n")

    #the following writeat offset and data is within filesize limit, so security layer should not block it
    myfile1.writeat("est",5)
    data = myfile1.readat(None,0)
    if data == "TestTe":
      pass
    else:
      raise Exception

    #Close the file
    myfile1.close()
    mycontext['TestingIsDone'] = True

  except ValueError as e:
    log("===>Test Case: " + str(testid) + " Failed\n")
    log("Error: Unknown Exception: " + str(e) + "\n")
    exitall()

def threadTwo():
  try:
    if testfilename2 in listfiles():
      removefile(testfilename2)
    myfile2=openfile(testfilename2,True)  #Open a file
    
    while mycontext['threadOneIsDone'] == False:
      #  log("Thread 2 sleeping\n")
      sleep(1)

    #  log("Starting thread 2\n")
    myfile2.setmaxfilesize(10)
    myfile2.close()
    mycontext['threadTwoIsDone'] = True

  except ValueError as e:
    log("===>Test Case: " + str(testid) + " Failed\n")
    log("Error: Unknown Exception: " + str(e) + "\n")
    exitall()
    #Close the file

createthread(threadOne)
createthread(threadTwo)

while mycontext['TestingIsDone'] == False:
  #  log("Waiting...\n")
  sleep(10)

log("===>Test Case - " + str(testid) + " Passed\n")
