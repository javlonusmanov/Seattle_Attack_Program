#!C:\Python27\python.exe

''' 
CS 392 / CS 6813 

Submission: Assignment 2, Part 1

Programmer: Garzen Pang
Username: gp1029

Purpose of program, assumptions, constraints:

Reference monitor for Seattle that restricts a file to have a fixed size

'''

#setting a fixed size
MAX_FILE_SIZE = 1000

class SecureFile():
  def __init__(self,file):
    mycontext['debug'] = False   
    mycontext['size'] = None
    self.file = file

  def setmaxfilesize(self,size):
    #raise ValueError if the size to be set is not valid
    if size < 0 or type(size) != int or size > MAX_FILE_SIZE:
      raise ValueError("Size cannot be less than 0 or a non-number or greater than 1000 (the fixed size)!")
    else:
      mycontext['size'] = size

  def writeat(self,data,offset):
    
    #raise error if user try to write beyond permitted file size
    if mycontext['size'] and offset < mycontext['size']:
      self.file.writeat(data,offset)
    else:
      raise SeekPastEndOfFileError("Tried to write past the end and beyond the size limit!")

  
  def readat(self,bytes,offset):
    return self.file.readat(bytes,offset)

  def close(self):
    return self.file.close()


def secure_openfile(filename, create):
  f = openfile(filename,create)
  return SecureFile(f)

def secure_listfiles():
  return listfiles()

def secure_removefile(filename):
  return removefile(filename)



# The code here sets up type checking and variable hiding for you.  You should not need to change anything below here.
sec_file_def = {"obj-type":SecureFile,
                "name":"SecureFile",
                "setmaxfilesize":{"type":"func","args":(int,long, type(None)),"exceptions":Exception,"return":(type(None)),"target":SecureFile.setmaxfilesize},
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":SecureFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":SecureFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":SecureFile.close}
           }

CHILD_CONTEXT_DEF["openfile"]["target"] = secure_openfile
CHILD_CONTEXT_DEF["listfiles"]["target"] = secure_listfiles
CHILD_CONTEXT_DEF["removefile"]["target"] = secure_removefile

# Execute the user code
secure_dispatch_module()
